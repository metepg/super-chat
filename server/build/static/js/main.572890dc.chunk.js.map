{"version":3,"sources":["components/ChatBox/ChatBox.module.css","components/MessageForm/MessageForm.module.css","components/Header/Header.module.css","components/MessageFeed/MessageFeed.module.css","components/RemoveButton/RemoveButton.module.css","components/LoginSignup/LoginSignup.module.css","App.module.css","components/Header/Header.js","soketti.js","components/MessageForm/MessageForm.js","components/MessageFeed/MessageFeed.js","components/RemoveButton/RemoveButton.js","components/utils/mapMessageTime.js","components/ChatBox/Chatbox.js","components/LoginSignup/LoginSignup.js","api/auth.js","components/utils/authentication.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","className","css","title","socket","io","on","console","log","MessageForm","useState","message","setMessage","onSubmit","e","preventDefault","userName","JSON","parse","localStorage","getItem","msgData","emit","target","reset","validate","container","style","color","pattern","maxLength","required","placeholder","onChange","cleanOnEnter","onEnter","value","borderColor","sendButton","type","MessageFeed","box","RemoveButton","item","removeButton","onClick","id","mapMessageTime","messages","map","msgTime","time","Date","messageTime","toLocaleString","split","today","now","ChatBox","React","list","setList","usercount","setUsercount","users","setUsers","useEffect","a","userCount","find","u","length","err","controller","superController","liMessage","name","flexController","teksti","toppaneleft","inputsUsernameSignUp","toppaneright","usersText","aside","usersList","user","feed","Input","setValue","LoginSignup","action","setName","password","setPassword","background","trim","validateForm","form","URL","validateLogin","userData","axios","post","data","alert","response","validateSignup","App","resetTimer","setItem","logout","clear","setIsAuthenticated","window","location","reload","setInterval","parseInt","addEventListener","isAuthenticated","refreshPage","obg","token","stringify","onMouseMove","backgroundColor","marginLeft","section","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.572890dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controller\":\"ChatBox_controller__2YqpX\",\"superController\":\"ChatBox_superController__3OAP4\",\"flexController\":\"ChatBox_flexController__N3g51\",\"aside\":\"ChatBox_aside__1e6dg\",\"feed\":\"ChatBox_feed__1yOeR\",\"toppaneleft\":\"ChatBox_toppaneleft___mu8Y\",\"toppaneright\":\"ChatBox_toppaneright__fMlVa\",\"usersText\":\"ChatBox_usersText__3Bl2o\",\"usersList\":\"ChatBox_usersList__3GDk4\",\"loginButton\":\"ChatBox_loginButton__1WTfk\",\"signUpButton\":\"ChatBox_signUpButton__2AL-A\",\"inputsLoginPassword\":\"ChatBox_inputsLoginPassword__3dkVv\",\"inputsUsernameSignUp\":\"ChatBox_inputsUsernameSignUp__2n0bI\",\"chatMessages\":\"ChatBox_chatMessages__1fRtn\",\"name\":\"ChatBox_name__1KxRA\",\"teksti\":\"ChatBox_teksti__8c9Mn\",\"messagesList\":\"ChatBox_messagesList__34Q80\",\"liMessage\":\"ChatBox_liMessage__1DgYs\",\"msgTime\":\"ChatBox_msgTime__2ZaYJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputChat\":\"MessageForm_inputChat__aQLW1\",\"sendButton\":\"MessageForm_sendButton__1xv1A\",\"container\":\"MessageForm_container__1QJi3\",\"inputEmoji\":\"MessageForm_inputEmoji__2gzHZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Header_title__3SH2Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"MessageFeed_box__12tUp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"removeButton\":\"RemoveButton_removeButton__ELsQx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginSignup_form__2HOIW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"App_section__1OL6S\"};","import css from './Header.module.css';\nconst Header = () => {\n  return <h1 className={css.title}>SUPER CHAT</h1>;\n};\n\nexport default Header;\n","import io from 'socket.io-client';\n\n// const socket = io('http://localhost:3001');\nconst socket = io();\n\nsocket.on('connect', () => {\n  console.log('connected');\n});\n\nexport default socket;\n","import React, { useState } from 'react';\nimport css from './MessageForm.module.css';\nimport './style.css';\nimport socket from '../../soketti';\nimport InputEmoji from 'react-input-emoji';\n\n/**\n * Chatsovelluksen viestit lähetetään lomakkeella\n * Tässä on se lomake\n *\n * @author Mete Güneysel\n */\nconst MessageForm = () => {\n  // message = inputin sen hetkinen arvo\n  // setMessage = asettaa inputille arvon kun kenttään kirjoitetaan\n  const [message, setMessage] = useState('');\n\n  function validate(e) {\n    // e.preventDefault estää sivun päivittymisen (default toiminto 90 luvulta kun lomakkeilla lähetettiin dataa)\n    e.preventDefault();\n\n    // Jos viestikenttä on tyhjä älä tee mitään\n    if (!message) {\n      return;\n    }\n    const { userName } = JSON.parse(localStorage.getItem('user'));\n    const msgData = { message, userName };\n    socket.emit('message', msgData);\n    e.target.reset();\n    setMessage('');\n  }\n\n  function onEnterDown() {\n    // Jos viestikenttä on tyhjä älä tee mitään\n    if (!message) {\n      return;\n    }\n    const { userName } = JSON.parse(localStorage.getItem('user'));\n    const msgData = { message, userName };\n    socket.emit('message', msgData);\n    setMessage('');\n  }\n\n  return (\n    <form onSubmit={(e) => validate(e)}>\n      <div className={css.container}>\n        <InputEmoji\n          style={{ color: 'red' }}\n          className=\"inputEmoji\"\n          pattern=\"^.{1,80}$\"\n          title=\"Max 80 characters.\"\n          maxLength=\"80\"\n          required=\"required\"\n          placeholder=\"Type a message\"\n          onChange={setMessage}\n          cleanOnEnter\n          onEnter={onEnterDown}\n          value={message}\n          borderColor={'#FFFFFF'}\n        />\n        <button className={css.sendButton} type=\"submit\">\n          SEND\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default MessageForm;\n","import css from './MessageFeed.module.css';\nimport React from 'react';\nimport MessageForm from '../MessageForm/MessageForm';\n\nconst MessageFeed = () => {\n  return (\n    <div className={css.box}>\n      <MessageForm />\n    </div>\n  );\n};\n\nexport default MessageFeed;\n","import socket from '../../soketti';\nimport css from './RemoveButton.module.css';\n/**\n * Poistonappula, mikä näkyy vain viestin lähettäjälle.\n * Poistaa viestin sekä tietokannasta että frontista.\n * @author Nicklas Sundell, Mete Güneysel, Erik Holopainen\n * @param item viestin id\n * @returns Viestin poistonappula\n */\nconst RemoveButton = (item) => {\n  const user = JSON.parse(localStorage.getItem('user'));\n  if (user.userName === item.item.userName) {\n    return (\n      <button\n        type=\"button\"\n        className={css.removeButton}\n        onClick={() => socket.emit('delete-message', item.item.id)}\n      >\n        Remove\n      </button>\n    );\n  }\n  return null;\n};\nexport default RemoveButton;\n","/**\n * Chatboxin viestien saapumisajan muuntaminen oikeaan formaattiin\n * @author Mete Güneysel, Nicklas Sundell\n * @param messages kaikki kirjoitetut viestit arrayna joka sisältää viestiolioita\n */\nconst mapMessageTime = (messages) =>\n  messages.map((message) => {\n    const time = new Date(message.messageTime)\n      .toLocaleString('en-GB')\n      .split(',');\n    const today = new Date(Date.now()).toLocaleString('en-GB').split(',');\n    let msgTime;\n    if (time[0] === today[0]) msgTime = `Today at ${time[1]}`;\n    return {\n      ...message,\n      messageTime: msgTime ?? `${time[0]} at ${time[1]}`,\n    };\n  });\nexport default mapMessageTime;\n","import MessageFeed from '../MessageFeed/MessageFeed';\nimport RemoveButton from '../RemoveButton/RemoveButton';\nimport css from './ChatBox.module.css';\nimport React, { useEffect } from 'react';\nimport socket from '../../soketti';\nimport mapMessageTime from '../utils/mapMessageTime';\nimport Linkify from 'linkify-react';\n/**\n * Chat-ikkuna, pitää sisällään kaiken chattiin liittyvän gui:n\n * @author Erik Holopainen, Mete Güneysel, Nicklas Sundell\n * @returns Käytännössä koko chat-guin\n */\nconst ChatBox = () => {\n  const [list, setList] = React.useState([]);\n  const [usercount, setUsercount] = React.useState();\n  const [users, setUsers] = React.useState([]);\n  useEffect(() => {\n    socket.on('message', async function (messages) {\n      setList(mapMessageTime(messages));\n    });\n    socket.on('usersList', async function (userCount) {\n      try {\n        const { userName } = JSON.parse(localStorage.getItem('user'));\n        if (!userCount.find((u) => (u = userName))) {\n          socket.emit('online', userName);\n        }\n        setUsers(userCount);\n        setUsercount(userCount.length);\n      } catch (err) {}\n    });\n  }, []);\n  return (\n    <section className={css.controller}>\n      <section className={css.superController}>\n        <ul>\n          {list.map((item) => (\n            <li className={css.liMessage} key={item.id}>\n              <p className={css.name}>\n                {item.userName}{' '}\n                <span className={css.msgTime}>{item.messageTime}</span>\n              </p>\n              <div className={css.flexController}>\n                <Linkify>\n                  <p className={css.teksti}>{item.message}</p>\n                </Linkify>\n                <RemoveButton item={item} />\n              </div>\n            </li>\n          ))}\n        </ul>\n      </section>\n      <div className={css.toppaneleft}>\n        <div className={css.inputsUsernameSignUp}></div>\n      </div>\n      <div className={css.toppaneright}>\n        <h1 className={css.usersText}>Users online</h1>\n        <h3 className={css.usersText}>{usercount}</h3>\n      </div>\n      <aside className={css.aside}>\n        <ul className={css.usersList}>\n          {users.map((user) => (\n            <li key={user.id}>{user.userName}</li>\n          ))}\n        </ul>\n      </aside>\n      <div className={css.feed}>\n        <MessageFeed />\n      </div>\n    </section>\n  );\n};\nexport default ChatBox;\n","import { useState } from 'react';\nimport css from './LoginSignup.module.css';\n/**\n * Input-komponentti, vähentää koodia LoginSignup-komponentissa\n * @author Mete Güneysel, Nicklas Sundell\n * @param {*} param0\n */\nconst Input = ({ setValue, placeholder, type, value }) => {\n  return (\n    <input\n      required\n      placeholder={placeholder}\n      type={type}\n      value={value}\n      onChange={(e) => setValue(e.target.value)}\n    />\n  );\n};\n/**\n * Login sivun login ja signup-komponentit\n * @author Mete Güneysel, Nicklas Sundell\n * @param {*} param0\n * @returns {} Loginin tai signupin formin ja tyylit. Oletustyyli login.\n */\nconst LoginSignup = ({ action, type }) => {\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n\n  function validateForm(e) {\n    e.preventDefault();\n    if (!(name.trim() && password.trim())) return;\n    action(name, password);\n    setPassword('');\n  }\n  return (\n    <form\n      style={\n        type === 'signup'\n          ? { background: 'linear-gradient(to top, #00bfff, #94a0ff)' }\n          : null\n      }\n      onSubmit={(e) => validateForm(e, name, password)}\n      className={css.form}\n    >\n      <Input\n        setValue={setName}\n        placeholder={'name'}\n        type={'text'}\n        value={name}\n      />\n\n      <Input\n        setValue={setPassword}\n        placeholder={'password'}\n        type={'password'}\n        value={password}\n      />\n      <button\n        style={\n          type === 'signup'\n            ? {\n                background: 'linear-gradient(to top, #00bfff, #94a0ff',\n                color: 'white',\n              }\n            : null\n        }\n        type=\"submit\"\n      >\n        {type}\n      </button>\n    </form>\n  );\n};\nexport default LoginSignup;\n","import axios from 'axios';\n/**\n * Tämä hoitaa käyttäjien autentikointiin liittyvät toimenpiteet\n * @author Mete Güneysel\n */\nconst URL = '/auth';\n\nexport const signup = (userData) => axios.post(`${URL}/signup`, userData);\nexport const login = (userData) => axios.post(`${URL}/login`, userData);\n","import { login, signup } from '../../api/auth';\n\n/**\n * Helpperi käyttäjän autentikointiin\n *\n * @author Mete Güneysel\n */\n\n/**\n * Tarkistaa tietokannasta täsmääkö syötetyt tiedot käyttäjän nimeen\n *\n * @param name käyttäjänimi\n * @param password käyttäjän salasana\n */\nexport const validateLogin = async (name, password) => {\n  try {\n    const { data } = await login({ name, password });\n    return data;\n  } catch (error) {\n    alert(error.response.data.message);\n    return null;\n  }\n};\n\n/**\n *\n * @param name käyttäjänimi\n * @param password salasana\n *\n * Jos käyttäjänimi löytyy tietokannasta ilmoitetaan siitä käyttäjälle\n */\nexport const validateSignup = async (name, password) => {\n  try {\n    const { data } = await signup({ name, password });\n    return data;\n  } catch (error) {\n    alert(error.response.data.message);\n    return null;\n  }\n};\n","import Header from './components/Header/Header';\nimport ChatBox from './components/ChatBox/Chatbox';\nimport LoginSignup from './components/LoginSignup/LoginSignup';\nimport css from './App.module.css';\nimport { useEffect, useState } from 'react';\nimport {\n  validateLogin,\n  validateSignup,\n} from './components/utils/authentication';\nimport socket from './soketti';\n/**\n * Web-applikaatio superchat\n * @author Mete Güneysel, Nicklas Sundell, Erik Holopainen\n * @returns Web-applikaation frontin\n */\nfunction App() {\n  function resetTimer() {\n    localStorage.setItem('expireTime', Date.now() + 100000);\n  }\n  //Kirjaa käyttäjän ulos 100000 millisekunnin epäaktiivisuuden jälkeen.\n  setInterval(() => {\n    timedLogout();\n  }, 100000);\n  //Lähettää backendille tiedot käyttäjän online-statuksesta 10000 ms välein.\n  setInterval(() => {\n    if (localStorage.getItem('user')) {\n      try {\n        const { userName } = JSON.parse(localStorage.getItem('user'));\n        socket.emit('online', userName);\n      } catch (err) {\n        alert(err);\n      }\n    }\n  }, 10000);\n  /**\n   * Katsoo, liikutteleeko käyttäjä hiirtä applikaation päällä\n   * Jos liikuttelee, ajaa resetTimerin\n   * @author Nicklas Sundell\n   */\n  const handleMouseMove = () => {\n    resetTimer();\n  };\n  /**\n   * Logouttaa käyttäjän, jos expiretime on kulunut.\n   * @author Nicklas Sundell\n   */\n  function timedLogout() {\n    if (localStorage.getItem('user')) {\n      if (parseInt(localStorage.getItem('expireTime')) <= Date.now()) {\n        alert('logout');\n        logout();\n      }\n    }\n  }\n  /**\n   * Käyttäjän logout-funktio, tyhjentää localstoragen yms.\n   * @author Nicklas Sundell, Mete Güneysel\n   */\n  function logout() {\n    try {\n      const { userName } = JSON.parse(localStorage.getItem('user'));\n      socket.emit('user-disconnect', userName);\n    } catch (err) {\n      alert(err);\n    }\n    localStorage.clear();\n    setIsAuthenticated(false);\n    window.location.reload();\n  }\n\n  window.addEventListener('mousemove', resetTimer());\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Katsoo aina sivun latautuessa löytyykö token jo localstoragesta\n  // TODO:\n  // Tokenin voimassaolon tarkistaminen\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (user?.token) {\n      setIsAuthenticated(true);\n    }\n  }, []);\n  /**\n   * Käyttäjän kirjautumisfunktio, ajaa refreshPagen onnistuneen\n   * kirjautumisen jälkeen.\n   * @author Nicklas Sundell, Mete Güneysel\n   * @param {*} name\n   * @param {*} password\n   * @returns\n   */\n  async function loginUser(name, password) {\n    const userData = await validateLogin(name, password);\n    if (!userData) return;\n    await refreshPage(name, userData);\n  }\n  /**\n   * Käyttäjän luomisfuntkio, ajaa refreshPagen\n   * @author Nicklas Sundell, Mete Güneysel\n   * @param {*} name\n   * @param {*} password\n   * @returns\n   */\n  async function signupUser(name, password) {\n    const userData = await validateSignup(name, password);\n    if (!userData) return;\n    alert(`Created user ${userData.name}`);\n    await refreshPage(name, userData);\n  }\n  /**\n   * Reloadaa sivun, lähettää käyttäjän\n   * tiedot backendille ja lisää käyttäjän tiedot localstorageen\n   * @author Nicklas Sundell, Mete Güneysel\n   * @param {*} name\n   * @param {*} userData\n   */\n  async function refreshPage(name, userData) {\n    const obg = { userName: name, token: userData.token };\n    localStorage.setItem('user', JSON.stringify(obg));\n    socket.emit('user-connection', name);\n    resetTimer();\n    setIsAuthenticated(true);\n    window.location.reload();\n  }\n\n  return (\n    <main onMouseMove={handleMouseMove}>\n      {isAuthenticated ? (\n        <>\n          <button\n            style={{\n              backgroundColor: 'whitesmoke',\n              marginLeft: '10%',\n            }}\n            onClick={logout}\n          >\n            LOGOUT\n          </button>\n          <Header />\n          <ChatBox />\n        </>\n      ) : (\n        <section className={css.section}>\n          <LoginSignup action={loginUser} type={'login'} />\n          <LoginSignup action={signupUser} type={'signup'} />\n        </section>\n      )}\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}